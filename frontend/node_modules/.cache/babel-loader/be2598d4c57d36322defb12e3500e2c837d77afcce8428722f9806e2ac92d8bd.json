{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Documents/VucarTechnicalTest/frontend/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = ({\n  setCarName,\n  setIsCarAdded\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [apiResponse, setApiResponse] = useState('');\n  const [isCarAdded, setLocalCarAdded] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (value) {\n      try {\n        // POST request to the API\n        const response = await fetch('http://localhost:8080/cars', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          // Log the actual error message from the API to the console\n          console.error('Error from API:', data.message || 'Unknown error');\n          // Show custom error message to the user\n          throw new Error('Car has already existed!');\n        }\n\n        // If successful\n        setCarName(value); // Update the car name state\n        setApiResponse('Car added successfully!'); // Display success message\n        setIsCarAdded(true); // Mark that a car has been added (pass to parent)\n        setLocalCarAdded(true); // Control local message visibility\n      } catch (error) {\n        console.error('Caught Error:', error.message); // Log the caught error\n        setApiResponse('Car has already existed!'); // Display custom error message to the user\n        setIsCarAdded(false); // Reset car added status\n        setLocalCarAdded(false); // Hide the unsatisfactory criteria message\n      }\n\n      // setValue(''); // Clear the input field after submission\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"TodoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        className: \"todo-input\",\n        placeholder: \"Car name\",\n        disabled: isCarAdded // Disable input if car is added\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), !isCarAdded && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"todo-btn\",\n        children: \"Report Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"api-response\",\n      children: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), isCarAdded && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"Please select all UNSATISFYING criteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"2Fkoc8AzVypyC9/tVVLUb3udOQw=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","setCarName","setIsCarAdded","_s","value","setValue","apiResponse","setApiResponse","isCarAdded","setLocalCarAdded","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","data","json","ok","console","error","message","Error","children","onSubmit","className","type","onChange","target","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Documents/VucarTechnicalTest/frontend/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const TodoForm = ({ setCarName, setIsCarAdded }) => {\n  const [value, setValue] = useState('');\n  const [apiResponse, setApiResponse] = useState(''); \n  const [isCarAdded, setLocalCarAdded] = useState(false); \n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (value) {\n      try {\n        // POST request to the API\n        const response = await fetch('http://localhost:8080/cars', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ name: value }), \n        });\n\n        const data = await response.json(); \n\n        if (!response.ok) {\n          // Log the actual error message from the API to the console\n          console.error('Error from API:', data.message || 'Unknown error');\n          // Show custom error message to the user\n          throw new Error('Car has already existed!');\n        }\n\n        // If successful\n        setCarName(value); // Update the car name state\n        setApiResponse('Car added successfully!'); // Display success message\n        setIsCarAdded(true); // Mark that a car has been added (pass to parent)\n        setLocalCarAdded(true); // Control local message visibility\n      } catch (error) {\n        console.error('Caught Error:', error.message); // Log the caught error\n        setApiResponse('Car has already existed!'); // Display custom error message to the user\n        setIsCarAdded(false); // Reset car added status\n        setLocalCarAdded(false); // Hide the unsatisfactory criteria message\n      }\n\n      // setValue(''); // Clear the input field after submission\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"TodoForm\">\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          className=\"todo-input\"\n          placeholder=\"Car name\"\n          disabled={isCarAdded} // Disable input if car is added\n        />\n        {/* Conditionally render the button based on isCarAdded */}\n        {!isCarAdded && (\n          <button type=\"submit\" className=\"todo-btn\">\n            Report Inspection\n          </button>\n        )}\n      </form>\n\n      {/* Conditionally render the API response directly under the form */}\n      {apiResponse && (\n        <p className=\"api-response\">\n          {apiResponse}\n        </p>\n      )}\n\n      {/* Conditionally render the message if a car is added successfully */}\n      {isCarAdded && (\n        <p className=\"message\">\n          Please select all UNSATISFYING criteria\n        </p>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}