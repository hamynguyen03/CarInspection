{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Downloads/todo-app/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  task,\n  editTodo,\n  toggleComplete,\n  todoIndex\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false); // Track loading state\n\n  // Map inspectionCriteriaId to the todoIndex (1-based index)\n  const inspectionCriteriaId = todoIndex + 1;\n  const handleEditTodo = async () => {\n    try {\n      setIsLoading(true); // Set loading state to true during the API call\n\n      // PUT request to update the inspection criteria description\n      const response = await fetch(`http://localhost:8080/inspection-criteria/${inspectionCriteriaId}/description`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description: task.task\n        }) // Send updated description in the body\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update inspection criteria');\n      }\n      const data = await response.json(); // Handle response data if needed\n      console.log('Inspection criteria updated:', data);\n\n      // Call editTodo to update the local state as well\n      editTodo(task.id);\n    } catch (error) {\n      console.error('Error updating inspection criteria:', error);\n    } finally {\n      setIsLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${task.completed ? 'completed' : 'incompleted'}`,\n      onClick: () => toggleComplete(task.id),\n      children: task.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"edit-icon\",\n        icon: faPenToSquare,\n        onClick: handleEditTodo,\n        disabled: isLoading // Disable button when loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPenToSquare","jsxDEV","_jsxDEV","Todo","task","editTodo","toggleComplete","todoIndex","_s","isLoading","setIsLoading","inspectionCriteriaId","handleEditTodo","response","fetch","method","headers","body","JSON","stringify","description","ok","Error","data","json","console","log","id","error","className","children","completed","onClick","fileName","_jsxFileName","lineNumber","columnNumber","icon","disabled","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Downloads/todo-app/src/components/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\nexport const Todo = ({ task, editTodo, toggleComplete, todoIndex }) => {\n  const [isLoading, setIsLoading] = useState(false); // Track loading state\n\n  // Map inspectionCriteriaId to the todoIndex (1-based index)\n  const inspectionCriteriaId = todoIndex + 1;\n\n  const handleEditTodo = async () => {\n    try {\n      setIsLoading(true); // Set loading state to true during the API call\n\n      // PUT request to update the inspection criteria description\n      const response = await fetch(`http://localhost:8080/inspection-criteria/${inspectionCriteriaId}/description`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ description: task.task }), // Send updated description in the body\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update inspection criteria');\n      }\n\n      const data = await response.json(); // Handle response data if needed\n      console.log('Inspection criteria updated:', data);\n\n      // Call editTodo to update the local state as well\n      editTodo(task.id);\n    } catch (error) {\n      console.error('Error updating inspection criteria:', error);\n    } finally {\n      setIsLoading(false); // Reset loading state\n    }\n  };\n\n  return (\n    <div className=\"Todo\">\n      <p className={`${task.completed ? 'completed' : 'incompleted'}`} onClick={() => toggleComplete(task.id)}>\n        {task.task}\n      </p>\n      <div>\n        <FontAwesomeIcon\n          className=\"edit-icon\"\n          icon={faPenToSquare}\n          onClick={handleEditTodo}\n          disabled={isLoading} // Disable button when loading\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,cAAc;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMa,oBAAoB,GAAGJ,SAAS,GAAG,CAAC;EAE1C,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFF,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEpB;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CH,oBAAoB,cAAc,EAAE;QAC5GI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,WAAW,EAAEhB,IAAI,CAACA;QAAK,CAAC,CAAC,CAAE;MACpD,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;MACzD;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,IAAI,CAAC;;MAEjD;MACAlB,QAAQ,CAACD,IAAI,CAACuB,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAK2B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB5B,OAAA;MAAG2B,SAAS,EAAE,GAAGzB,IAAI,CAAC2B,SAAS,GAAG,WAAW,GAAG,aAAa,EAAG;MAACC,OAAO,EAAEA,CAAA,KAAM1B,cAAc,CAACF,IAAI,CAACuB,EAAE,CAAE;MAAAG,QAAA,EACrG1B,IAAI,CAACA;IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACJlC,OAAA;MAAA4B,QAAA,eACE5B,OAAA,CAACH,eAAe;QACd8B,SAAS,EAAC,WAAW;QACrBQ,IAAI,EAAErC,aAAc;QACpBgC,OAAO,EAAEpB,cAAe;QACxB0B,QAAQ,EAAE7B,SAAU,CAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlDWL,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}