{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Downloads/todo-app/src/components/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { EditTodoForm } from \"./EditTodoForm\";\nimport { NoteForm } from \"./NoteForm\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Engine Performance\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 2,\n    task: \"Tire Condition\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 3,\n    task: \"Brake Condition\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 4,\n    task: \"Headlights & Signals\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 5,\n    task: \"Windshields & Wipers\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }]);\n  const [carName, setCarName] = useState('');\n  const [isCarAdded, setIsCarAdded] = useState(false); // State to check if car was added\n  const [carStatus, setCarStatus] = useState(''); // State to store the car status after GET call\n  const [loadingInspection, setLoadingInspection] = useState(false); // To indicate loading status\n\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const handleNoteChange = (e, id) => {\n    const {\n      value\n    } = e.target;\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      note: value\n    } : todo));\n  };\n  const handleInspectionResult = async () => {\n    if (!carName) {\n      alert('Please provide a car name.');\n      return;\n    }\n    try {\n      setLoadingInspection(true);\n\n      // 1. Post 5 Car Inspections\n      for (const todo of todos) {\n        const isGood = !todo.completed; // Completed means isGood is false\n        const note = todo.note || null;\n        const response = await fetch(`http://localhost:8080/car-inspections/${carName}/${todo.id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            isGood,\n            note\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to post inspection for ${todo.task}`);\n        }\n      }\n\n      // 2. After posting inspections, retrieve car status\n      const carResponse = await fetch(`http://localhost:8080/cars/${carName}`);\n      if (!carResponse.ok) {\n        throw new Error('Failed to retrieve car status');\n      }\n      const carData = await carResponse.json();\n      setCarStatus(carData.status); // Assuming carData has a 'status' property\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoadingInspection(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Car Inspection Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      setCarName: setCarName,\n      setIsCarAdded: setIsCarAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), isCarAdded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n        editTodo: editTask,\n        task: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Todo, {\n          task: todo,\n          editTodo: editTodo,\n          toggleComplete: toggleComplete\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), todo.completed && /*#__PURE__*/_jsxDEV(NoteForm, {\n          note: todo.note,\n          onNoteChange: handleNoteChange,\n          todoId: todo.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleInspectionResult,\n        className: \"inspection-result-btn\",\n        children: loadingInspection ? 'Submitting...' : 'Inspection Result'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), carStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"car-status\",\n        children: [\"Car Status: \", carStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"SdOQGynsmWf5TL94uAtf3jLKZJQ=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","EditTodoForm","NoteForm","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoWrapper","_s","todos","setTodos","id","task","completed","isEditing","note","carName","setCarName","isCarAdded","setIsCarAdded","carStatus","setCarStatus","loadingInspection","setLoadingInspection","toggleComplete","map","todo","editTodo","editTask","handleNoteChange","e","value","target","handleInspectionResult","alert","isGood","response","fetch","method","headers","body","JSON","stringify","ok","Error","carResponse","carData","json","status","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNoteChange","todoId","onClick","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Downloads/todo-app/src/components/TodoWrapper.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { EditTodoForm } from \"./EditTodoForm\";\nimport { NoteForm } from \"./NoteForm\";\nimport Button from \"./Button\";\n\nexport const TodoWrapper = () => {\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Engine Performance\", completed: false, isEditing: false, note: \"\" },\n    { id: 2, task: \"Tire Condition\", completed: false, isEditing: false, note: \"\" },\n    { id: 3, task: \"Brake Condition\", completed: false, isEditing: false, note: \"\" },\n    { id: 4, task: \"Headlights & Signals\", completed: false, isEditing: false, note: \"\" },\n    { id: 5, task: \"Windshields & Wipers\", completed: false, isEditing: false, note: \"\" },\n  ]);\n\n  const [carName, setCarName] = useState('');\n  const [isCarAdded, setIsCarAdded] = useState(false); // State to check if car was added\n  const [carStatus, setCarStatus] = useState(''); // State to store the car status after GET call\n  const [loadingInspection, setLoadingInspection] = useState(false); // To indicate loading status\n\n  const toggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const editTodo = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n      )\n    );\n  };\n\n  const editTask = (task, id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\n      )\n    );\n  };\n\n  const handleNoteChange = (e, id) => {\n    const { value } = e.target;\n    setTodos(todos.map(todo => \n      todo.id === id ? { ...todo, note: value } : todo\n    ));\n  };\n\n  const handleInspectionResult = async () => {\n    if (!carName) {\n      alert('Please provide a car name.');\n      return;\n    }\n\n    try {\n      setLoadingInspection(true);\n      \n      // 1. Post 5 Car Inspections\n      for (const todo of todos) {\n        const isGood = !todo.completed; // Completed means isGood is false\n        const note = todo.note || null;\n\n        const response = await fetch(`http://localhost:8080/car-inspections/${carName}/${todo.id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ isGood, note }),\n        });\n\n        if (!response.ok) {\n          throw new Error(`Failed to post inspection for ${todo.task}`);\n        }\n      }\n\n      // 2. After posting inspections, retrieve car status\n      const carResponse = await fetch(`http://localhost:8080/cars/${carName}`);\n      if (!carResponse.ok) {\n        throw new Error('Failed to retrieve car status');\n      }\n\n      const carData = await carResponse.json();\n      setCarStatus(carData.status); // Assuming carData has a 'status' property\n\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoadingInspection(false); // Stop loading\n    }\n  };\n\n  return (\n    <div className=\"TodoWrapper\">\n      <h1>Car Inspection Report</h1>\n      <TodoForm setCarName={setCarName} setIsCarAdded={setIsCarAdded} />\n      \n      {/* Conditionally show todos only if a car is added */}\n      {isCarAdded && (\n        <>\n          {todos.map((todo) =>\n            todo.isEditing ? (\n              <EditTodoForm editTodo={editTask} task={todo} />\n            ) : (\n              <div key={todo.id}>\n                <Todo\n                  key={todo.id}\n                  task={todo}\n                  editTodo={editTodo}\n                  toggleComplete={toggleComplete}\n                />\n                {todo.completed && (\n                  <NoteForm\n                    note={todo.note}\n                    onNoteChange={handleNoteChange}\n                    todoId={todo.id}\n                  />\n                )}\n              </div>\n            )\n          )}\n          <Button onClick={handleInspectionResult} className=\"inspection-result-btn\">\n            {loadingInspection ? 'Submitting...' : 'Inspection Result'}\n          </Button>\n\n          {/* Show car status once retrieved */}\n          {carStatus && (\n            <p className=\"car-status\">\n              Car Status: {carStatus}\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}