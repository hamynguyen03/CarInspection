{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Downloads/todo-app/src/components/NoteForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NoteForm = ({\n  note,\n  onNoteChange,\n  todoId,\n  isCompleted\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"NoteForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `note-${todoId}`,\n      children: \"Note*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: `note-${todoId}`,\n      value: note,\n      onChange: e => onNoteChange(e, todoId) // Capture input and update note\n      ,\n      className: \"note-input\",\n      placeholder: \"Reason for unsatisfying criteria\",\n      required: isCompleted // Ensure the note is required when the task is completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NoteForm","note","onNoteChange","todoId","isCompleted","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Downloads/todo-app/src/components/NoteForm.js"],"sourcesContent":["import React from 'react';\n\nexport const NoteForm = ({ note, onNoteChange, todoId, isCompleted }) => {\n  return (\n    <form className=\"NoteForm\">\n      <label htmlFor={`note-${todoId}`}>Note*</label>\n      <input\n        type=\"text\"\n        id={`note-${todoId}`}\n        value={note}\n        onChange={(e) => onNoteChange(e, todoId)} // Capture input and update note\n        className=\"note-input\"\n        placeholder=\"Reason for unsatisfying criteria\"\n        required={isCompleted} // Ensure the note is required when the task is completed\n      />\n    </form>\n  );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,MAAM;EAAEC;AAAY,CAAC,KAAK;EACvE,oBACEL,OAAA;IAAMM,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBP,OAAA;MAAOQ,OAAO,EAAE,QAAQJ,MAAM,EAAG;MAAAG,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/CZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,EAAE,EAAE,QAAQV,MAAM,EAAG;MACrBW,KAAK,EAAEb,IAAK;MACZc,QAAQ,EAAGC,CAAC,IAAKd,YAAY,CAACc,CAAC,EAAEb,MAAM,CAAE,CAAC;MAAA;MAC1CE,SAAS,EAAC,YAAY;MACtBY,WAAW,EAAC,kCAAkC;MAC9CC,QAAQ,EAAEd,WAAY,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACQ,EAAA,GAfWnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}