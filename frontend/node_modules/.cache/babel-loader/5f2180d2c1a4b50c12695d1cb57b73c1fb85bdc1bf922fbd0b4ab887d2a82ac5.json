{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Downloads/todo-app/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = ({\n  setCarName\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [showMessage, setShowMessage] = useState(false); // For the \"Please select all...\" message\n  const [apiResponse, setApiResponse] = useState(''); // API response for success or failure\n  const [isCarAdded, setIsCarAdded] = useState(false); // Track if a car was successfully added\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (value) {\n      try {\n        // POST request to the API\n        const response = await fetch('http://localhost:8080/cars', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: value\n          }) // Send the car name as payload\n        });\n        const data = await response.json(); // Fetch the response data\n\n        if (!response.ok) {\n          // Use the error message returned from the API in case of failure\n          throw new Error(data.message || 'Failed to add car');\n        }\n\n        // If successful\n        setCarName(value); // Update the car name state\n        setApiResponse('Car added successfully'); // Display success message\n        setIsCarAdded(true); // Mark that a car has been added\n      } catch (error) {\n        console.error(error);\n        setApiResponse(error.message); // Display the actual error message from the API\n        setIsCarAdded(false); // Reset car added status\n      }\n      setShowMessage(true); // Show \"Please select all unsatisfactory criteria\" if success\n      setValue(''); // Clear the input field after submission\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"TodoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        className: \"todo-input\",\n        placeholder: \"Car name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"todo-btn\",\n        children: \"Report Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"api-response\",\n      children: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), isCarAdded && showMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"Please select all unsatisfactory criteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"nXLoWPRN3OcdXA9AAJMy/4YumiY=\");\n_c = TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","setCarName","_s","value","setValue","showMessage","setShowMessage","apiResponse","setApiResponse","isCarAdded","setIsCarAdded","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","data","json","ok","Error","message","error","console","children","onSubmit","className","type","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Downloads/todo-app/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const TodoForm = ({ setCarName }) => {\n  const [value, setValue] = useState('');\n  const [showMessage, setShowMessage] = useState(false); // For the \"Please select all...\" message\n  const [apiResponse, setApiResponse] = useState(''); // API response for success or failure\n  const [isCarAdded, setIsCarAdded] = useState(false); // Track if a car was successfully added\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (value) {\n      try {\n        // POST request to the API\n        const response = await fetch('http://localhost:8080/cars', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ name: value }), // Send the car name as payload\n        });\n\n        const data = await response.json(); // Fetch the response data\n\n        if (!response.ok) {\n          // Use the error message returned from the API in case of failure\n          throw new Error(data.message || 'Failed to add car');\n        }\n\n        // If successful\n        setCarName(value); // Update the car name state\n        setApiResponse('Car added successfully'); // Display success message\n        setIsCarAdded(true); // Mark that a car has been added\n      } catch (error) {\n        console.error(error);\n        setApiResponse(error.message); // Display the actual error message from the API\n        setIsCarAdded(false); // Reset car added status\n      }\n\n      setShowMessage(true); // Show \"Please select all unsatisfactory criteria\" if success\n      setValue(''); // Clear the input field after submission\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"TodoForm\">\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          className=\"todo-input\"\n          placeholder=\"Car name\"\n        />\n        <button type=\"submit\" className=\"todo-btn\">Report Inspection</button>\n      </form>\n\n      {/* Conditionally render the API response directly under the form */}\n      {apiResponse && (\n        <p className=\"api-response\">\n          {apiResponse}\n        </p>\n      )}\n\n      {/* Conditionally render the message if a car is added */}\n      {isCarAdded && showMessage && (\n        <p className=\"message\">\n          Please select all unsatisfactory criteria\n        </p>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}