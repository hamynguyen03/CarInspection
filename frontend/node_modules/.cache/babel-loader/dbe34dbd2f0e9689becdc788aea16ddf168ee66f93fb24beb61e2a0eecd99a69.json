{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Downloads/todo-app/src/components/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { EditTodoForm } from \"./EditTodoForm\";\nimport { NoteForm } from \"./NoteForm\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Engine Performance\",\n    completed: false,\n    isEditing: false,\n    note: \"\",\n    confirmed: false\n  }, {\n    id: 2,\n    task: \"Tire Condition\",\n    completed: false,\n    isEditing: false,\n    note: \"\",\n    confirmed: false\n  }, {\n    id: 3,\n    task: \"Brake Condition\",\n    completed: false,\n    isEditing: false,\n    note: \"\",\n    confirmed: false\n  }, {\n    id: 4,\n    task: \"Headlights & Signals\",\n    completed: false,\n    isEditing: false,\n    note: \"\",\n    confirmed: false\n  }, {\n    id: 5,\n    task: \"Windshields & Wipers\",\n    completed: false,\n    isEditing: false,\n    note: \"\",\n    confirmed: false\n  }]);\n  const [carName, setCarName] = useState('');\n  const [isCarAdded, setIsCarAdded] = useState(false); // State to check if car was added\n\n  // Toggle between complete and incomplete\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => {\n      if (!todo.completed && todo.id === id) {\n        return {\n          ...todo,\n          completed: true\n        };\n      }\n      if (todo.completed && todo.id === id) {\n        return {\n          ...todo,\n          completed: false,\n          note: \"\"\n        };\n      }\n      return todo;\n    }));\n  };\n  const handleNoteChange = (e, id) => {\n    const {\n      value\n    } = e.target;\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      note: value\n    } : todo));\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n\n  // Confirm Todo (save button logic)\n  const confirmTodo = async id => {\n    const todo = todos.find(t => t.id === id);\n    const isGood = !todo.completed;\n    const note = todo.note.trim();\n    try {\n      const response = await fetch(`http://localhost:8080/car-inspections/${carName}/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isGood,\n          note\n        })\n      });\n      if (!response.ok) {\n        const contentType = response.headers.get('content-type');\n\n        // Check if the response is JSON\n        if (contentType && contentType.includes('application/json')) {\n          const errorData = await response.json();\n          console.error('Error from API (JSON):', errorData);\n          throw new Error(errorData.message || 'Failed to save car inspection.');\n        } else {\n          // Handle non-JSON responses (like plain text or HTML)\n          const errorText = await response.text();\n          console.error('Error from API (non-JSON):', errorText);\n          throw new Error(errorText || 'Failed to save car inspection.');\n        }\n      }\n\n      // If successful, confirm the todo\n      setTodos(todos.map(todo => todo.id === id ? {\n        ...todo,\n        confirmed: true,\n        isEditing: false\n      } : todo));\n    } catch (error) {\n      console.error('Error during POST request:', error.message);\n      alert('Error in saving car inspection: ' + error.message);\n    }\n  };\n  const handleInspectionResult = () => {\n    if (carName) {\n      alert(`Inspection results for ${carName} submitted!`);\n    } else {\n      alert('Please provide a car name.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Car Inspection Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      setCarName: setCarName,\n      setIsCarAdded: setIsCarAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), isCarAdded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n        editTodo: editTask,\n        task: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Todo, {\n          task: todo,\n          editTodo: editTodo,\n          toggleComplete: toggleComplete,\n          confirmTodo: confirmTodo // Pass the confirm function to each todo\n          ,\n          isConfirmDisabled: !todo.note.trim() && todo.completed // Disable if note is empty for completed tasks\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), todo.completed && /*#__PURE__*/_jsxDEV(NoteForm, {\n          note: todo.note,\n          onNoteChange: handleNoteChange,\n          todoId: todo.id,\n          isDisabled: todo.confirmed // Disable if confirmed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleInspectionResult,\n        className: \"inspection-result-btn\",\n        children: \"Inspection Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"C8Zr1VHEKILPwz2a6aQLkvheREM=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","EditTodoForm","NoteForm","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoWrapper","_s","todos","setTodos","id","task","completed","isEditing","note","confirmed","carName","setCarName","isCarAdded","setIsCarAdded","toggleComplete","map","todo","handleNoteChange","e","value","target","editTodo","editTask","confirmTodo","find","t","isGood","trim","response","fetch","method","headers","body","JSON","stringify","ok","contentType","get","includes","errorData","json","console","error","Error","message","errorText","text","alert","handleInspectionResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isConfirmDisabled","onNoteChange","todoId","isDisabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Downloads/todo-app/src/components/TodoWrapper.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { EditTodoForm } from \"./EditTodoForm\";\nimport { NoteForm } from \"./NoteForm\";\nimport Button from \"./Button\";\n\nexport const TodoWrapper = () => {\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Engine Performance\", completed: false, isEditing: false, note: \"\", confirmed: false },\n    { id: 2, task: \"Tire Condition\", completed: false, isEditing: false, note: \"\", confirmed: false },\n    { id: 3, task: \"Brake Condition\", completed: false, isEditing: false, note: \"\", confirmed: false },\n    { id: 4, task: \"Headlights & Signals\", completed: false, isEditing: false, note: \"\", confirmed: false },\n    { id: 5, task: \"Windshields & Wipers\", completed: false, isEditing: false, note: \"\", confirmed: false }\n  ]);\n\n  const [carName, setCarName] = useState('');\n  const [isCarAdded, setIsCarAdded] = useState(false); // State to check if car was added\n\n  // Toggle between complete and incomplete\n  const toggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (!todo.completed && todo.id === id) {\n          return { ...todo, completed: true }; \n        }\n        if (todo.completed && todo.id === id) {\n          return { ...todo, completed: false, note: \"\" };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const handleNoteChange = (e, id) => {\n    const { value } = e.target;\n    setTodos(todos.map((todo) => todo.id === id ? { ...todo, note: value } : todo));\n  };\n\n  const editTodo = (id) => {\n    setTodos(todos.map((todo) => todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo));\n  };\n\n  const editTask = (task, id) => {\n    setTodos(todos.map((todo) => todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo));\n  };\n\n  // Confirm Todo (save button logic)\n  const confirmTodo = async (id) => {\n    const todo = todos.find((t) => t.id === id);\n    \n    const isGood = !todo.completed;\n    const note = todo.note.trim();\n\n    try {\n      const response = await fetch(`http://localhost:8080/car-inspections/${carName}/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          isGood, \n          note\n        }),\n      });\n\n      if (!response.ok) {\n        const contentType = response.headers.get('content-type');\n\n        // Check if the response is JSON\n        if (contentType && contentType.includes('application/json')) {\n          const errorData = await response.json();\n          console.error('Error from API (JSON):', errorData);\n          throw new Error(errorData.message || 'Failed to save car inspection.');\n        } else {\n          // Handle non-JSON responses (like plain text or HTML)\n          const errorText = await response.text();\n          console.error('Error from API (non-JSON):', errorText);\n          throw new Error(errorText || 'Failed to save car inspection.');\n        }\n      }\n\n      // If successful, confirm the todo\n      setTodos(\n        todos.map((todo) => \n          todo.id === id ? { ...todo, confirmed: true, isEditing: false } : todo\n        )\n      );\n\n    } catch (error) {\n      console.error('Error during POST request:', error.message);\n      alert('Error in saving car inspection: ' + error.message);\n    }\n};\n\n  const handleInspectionResult = () => {\n    if (carName) {\n      alert(`Inspection results for ${carName} submitted!`);\n    } else {\n      alert('Please provide a car name.');\n    }\n  };\n\n  return (\n    <div className=\"TodoWrapper\">\n      <h1>Car Inspection Report</h1>\n      <TodoForm setCarName={setCarName} setIsCarAdded={setIsCarAdded} />\n      \n      {isCarAdded && (\n        <>\n          {todos.map((todo) =>\n            todo.isEditing ? (\n              <EditTodoForm editTodo={editTask} task={todo} />\n            ) : (\n              <div key={todo.id}>\n                <Todo\n                  key={todo.id}\n                  task={todo}\n                  editTodo={editTodo}\n                  toggleComplete={toggleComplete}\n                  confirmTodo={confirmTodo} // Pass the confirm function to each todo\n                  isConfirmDisabled={!todo.note.trim() && todo.completed} // Disable if note is empty for completed tasks\n                />\n                {/* Always show the note form if the task is completed */}\n                {todo.completed && (\n                  <NoteForm\n                    note={todo.note}\n                    onNoteChange={handleNoteChange}\n                    todoId={todo.id}\n                    isDisabled={todo.confirmed} // Disable if confirmed\n                  />\n                )}\n              </div>\n            )\n          )}\n          <Button onClick={handleInspectionResult} className=\"inspection-result-btn\">\n            Inspection Result\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}