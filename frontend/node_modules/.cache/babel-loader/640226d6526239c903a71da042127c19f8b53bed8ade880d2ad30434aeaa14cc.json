{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Documents/VucarTechnicalTest/frontend/src/components/NewCarForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewCarForm = ({\n  setCarName,\n  setIsCarAdded\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [apiResponse, setApiResponse] = useState('');\n  const [isCarAdded, setLocalCarAdded] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (value) {\n      try {\n        // POST request to the API\n        const response = await fetch('http://localhost:8080/cars', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        });\n        if (!response.ok) {\n          const contentType = response.headers.get('content-type');\n          let errorMessage = 'An unexpected error occurred.';\n          if (contentType && contentType.includes('application/json')) {\n            // Handle JSON error response\n            const errorData = await response.json();\n            errorMessage = errorData.message || 'An error occurred while adding the car.';\n          } else {\n            // Handle non-JSON error response (plain text)\n            errorMessage = await response.text();\n          }\n          if (response.status === 400) {\n            errorMessage = 'Car with this name already exists!';\n          } else if (response.status >= 500) {\n            errorMessage = 'Server is down or unavailable. Please try again later.';\n          }\n          throw new Error(errorMessage);\n        }\n        setCarName(value);\n        setApiResponse('Car added successfully!');\n        setIsCarAdded(true);\n        setLocalCarAdded(true);\n      } catch (error) {\n        console.error('Caught Error:', error.message);\n        setApiResponse(error.message);\n        setIsCarAdded(false);\n        setLocalCarAdded(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"NewCarForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        className: \"criteria-input\",\n        placeholder: \"Car name\",\n        disabled: isCarAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), !isCarAdded && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"criteria-btn\",\n        children: \"Report Inspection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"api-response\",\n      children: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), isCarAdded && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"Please select all UNSATISFYING criteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCarForm, \"2Fkoc8AzVypyC9/tVVLUb3udOQw=\");\n_c = NewCarForm;\nvar _c;\n$RefreshReg$(_c, \"NewCarForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewCarForm","setCarName","setIsCarAdded","_s","value","setValue","apiResponse","setApiResponse","isCarAdded","setLocalCarAdded","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","ok","contentType","get","errorMessage","includes","errorData","json","message","text","status","Error","error","console","children","onSubmit","className","type","onChange","target","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Documents/VucarTechnicalTest/frontend/src/components/NewCarForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const NewCarForm = ({ setCarName, setIsCarAdded }) => {\n  const [value, setValue] = useState('');\n  const [apiResponse, setApiResponse] = useState(''); \n  const [isCarAdded, setLocalCarAdded] = useState(false); \n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (value) {\n      try {\n        // POST request to the API\n        const response = await fetch('http://localhost:8080/cars', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ name: value }), \n        });\n\n        if (!response.ok) {\n          const contentType = response.headers.get('content-type');\n          let errorMessage = 'An unexpected error occurred.'; \n\n          if (contentType && contentType.includes('application/json')) {\n            // Handle JSON error response\n            const errorData = await response.json();\n            errorMessage = errorData.message || 'An error occurred while adding the car.';\n          } else {\n            // Handle non-JSON error response (plain text)\n            errorMessage = await response.text();\n          }\n\n          if (response.status === 400) {\n            errorMessage = 'Car with this name already exists!';\n          } else if (response.status >= 500) {\n            errorMessage = 'Server is down or unavailable. Please try again later.';\n          }\n\n          throw new Error(errorMessage); \n        }\n\n        setCarName(value); \n        setApiResponse('Car added successfully!'); \n        setIsCarAdded(true); \n        setLocalCarAdded(true); \n      } catch (error) {\n        console.error('Caught Error:', error.message); \n        setApiResponse(error.message); \n        setIsCarAdded(false); \n        setLocalCarAdded(false); \n      }\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"NewCarForm\">\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          className=\"criteria-input\"\n          placeholder=\"Car name\"\n          disabled={isCarAdded} \n        />\n        {/* Conditionally render the button based on isCarAdded */}\n        {!isCarAdded && (\n          <button type=\"submit\" className=\"criteria-btn\">\n            Report Inspection\n          </button>\n        )}\n      </form>\n\n      {/* Conditionally render the API response directly under the form */}\n      {apiResponse && (\n        <p className=\"api-response\">\n          {apiResponse}\n        </p>\n      )}\n\n      {/* Conditionally render the message if a car is added successfully */}\n      {isCarAdded && (\n        <p className=\"message\">\n          Please select all UNSATISFYING criteria\n        </p>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}