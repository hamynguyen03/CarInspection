{"ast":null,"code":"var _jsxFileName = \"/Users/hamynguyen/Downloads/todo-app/src/components/TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { EditTodoForm } from \"./EditTodoForm\";\nimport { NoteForm } from \"./NoteForm\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Engine Performance\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 2,\n    task: \"Tire Condition\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 3,\n    task: \"Brake Condition\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 4,\n    task: \"Headlights & Signals\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }, {\n    id: 5,\n    task: \"Windshields & Wipers\",\n    completed: false,\n    isEditing: false,\n    note: \"\"\n  }]);\n  const [carName, setCarName] = useState('');\n  const [isCarAdded, setIsCarAdded] = useState(false); // State to check if car was added\n\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        // If completed is set to true, check if the note is non-empty\n        if (!todo.completed && !todo.note.trim()) {\n          alert('Note is required for completed tasks.');\n          return todo; // Do not update the completed status if note is empty\n        }\n        return {\n          ...todo,\n          completed: !todo.completed\n        }; // Toggle the completed status\n      }\n      return todo;\n    }));\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const handleNoteChange = (e, id) => {\n    const {\n      value\n    } = e.target;\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      note: value\n    } : todo));\n  };\n  const handleInspectionResult = () => {\n    if (carName) {\n      alert(`Inspection results for ${carName} submitted!`);\n    } else {\n      alert('Please provide a car name.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Car Inspection Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      setCarName: setCarName,\n      setIsCarAdded: setIsCarAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), isCarAdded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n        editTodo: editTask,\n        task: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Todo, {\n          task: todo,\n          editTodo: editTodo,\n          toggleComplete: toggleComplete\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), todo.completed && /*#__PURE__*/_jsxDEV(NoteForm, {\n          note: todo.note,\n          onNoteChange: handleNoteChange,\n          todoId: todo.id,\n          isCompleted: todo.completed // Pass the completed state to make the note required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleInspectionResult,\n        className: \"inspection-result-btn\",\n        children: \"Inspection Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"YPZ/fssuGaqrtojD0RrXASJvFxI=\");\n_c = TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","EditTodoForm","NoteForm","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoWrapper","_s","todos","setTodos","id","task","completed","isEditing","note","carName","setCarName","isCarAdded","setIsCarAdded","toggleComplete","map","todo","trim","alert","editTodo","editTask","handleNoteChange","e","value","target","handleInspectionResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNoteChange","todoId","isCompleted","onClick","_c","$RefreshReg$"],"sources":["/Users/hamynguyen/Downloads/todo-app/src/components/TodoWrapper.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { TodoForm } from \"./TodoForm\";\nimport { EditTodoForm } from \"./EditTodoForm\";\nimport { NoteForm } from \"./NoteForm\";\nimport Button from \"./Button\";\n\nexport const TodoWrapper = () => {\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Engine Performance\", completed: false, isEditing: false, note: \"\" },\n    { id: 2, task: \"Tire Condition\", completed: false, isEditing: false, note: \"\" },\n    { id: 3, task: \"Brake Condition\", completed: false, isEditing: false, note: \"\" },\n    { id: 4, task: \"Headlights & Signals\", completed: false, isEditing: false, note: \"\" },\n    { id: 5, task: \"Windshields & Wipers\", completed: false, isEditing: false, note: \"\" }\n  ]);\n\n  const [carName, setCarName] = useState('');\n  const [isCarAdded, setIsCarAdded] = useState(false); // State to check if car was added\n\n  const toggleComplete = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          // If completed is set to true, check if the note is non-empty\n          if (!todo.completed && !todo.note.trim()) {\n            alert('Note is required for completed tasks.');\n            return todo; // Do not update the completed status if note is empty\n          }\n          return { ...todo, completed: !todo.completed }; // Toggle the completed status\n        }\n        return todo;\n      })\n    );\n  };\n\n  const editTodo = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\n      )\n    );\n  };\n\n  const editTask = (task, id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\n      )\n    );\n  };\n\n  const handleNoteChange = (e, id) => {\n    const { value } = e.target;\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, note: value } : todo\n      )\n    );\n  };\n\n  const handleInspectionResult = () => {\n    if (carName) {\n      alert(`Inspection results for ${carName} submitted!`);\n    } else {\n      alert('Please provide a car name.');\n    }\n  };\n\n  return (\n    <div className=\"TodoWrapper\">\n      <h1>Car Inspection Report</h1>\n      <TodoForm setCarName={setCarName} setIsCarAdded={setIsCarAdded} />\n\n      {/* Conditionally show todos only if a car is added */}\n      {isCarAdded && (\n        <>\n          {todos.map((todo) =>\n            todo.isEditing ? (\n              <EditTodoForm editTodo={editTask} task={todo} />\n            ) : (\n              <div key={todo.id}>\n                <Todo\n                  key={todo.id}\n                  task={todo}\n                  editTodo={editTodo}\n                  toggleComplete={toggleComplete}\n                />\n                {/* Show note form if the todo is completed */}\n                {todo.completed && (\n                  <NoteForm\n                    note={todo.note}\n                    onNoteChange={handleNoteChange}\n                    todoId={todo.id}\n                    isCompleted={todo.completed} // Pass the completed state to make the note required\n                  />\n                )}\n              </div>\n            )\n          )}\n          <Button onClick={handleInspectionResult} className=\"inspection-result-btn\">\n            Inspection Result\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}